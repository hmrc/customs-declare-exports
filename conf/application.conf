# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName=customs-declare-exports

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"


play.modules.enabled += "uk.gov.hmrc.exports.scheduler.Module"
play.modules.enabled += "uk.gov.hmrc.exports.routines.RoutineRunnerModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="FYLCnHaiucpD9htbtF2HtYmbPNmwvk2WSTUbOKwuV8ZXUoOxqp5uERZl4uE7JfHf"

# Session configuration
# ~~~~~
play.http.session.secure=false

# The application languages
# ~~~~

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.



# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=DEBUG

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = false
    jvm = false
    enabled = true
}

# Microservice specific config
auditing {
    enabled=false
    traceRequests=false
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

mongodb {
    uri = "mongodb://localhost:27017/customs-declare-exports"
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            rateUnit = SECONDS
            durationUnit = SECONDS
            showSamples = false
            jvm = false
            enabled = false
        }
    }

    services {
        auth {
            host=localhost
            port=8500
        }

        customs-declarations {
            host = localhost
            port = 6790
            submit-uri = "/"
            cancel-uri = "/cancellation-requests"
            api-version = "1.0"
            bearer-token = "Bearer customs-declare-exports"
            client-id = "customs-declare-exports"
        }

        customs-declarations-information {
          host = localhost
          port = 9834
          fetch-mrn-status = "/mrn/ID/status"
          api-version = "1.0"
          bearer-token = "Bearer customs-declare-exports"
          client-id = "customs-declare-exports"
        }

        customs-data-store {
            host = localhost
            port = 6790
            verified-email-path = "/customs-data-store/eori/EORI/verified-email"
        }
    }

    features {
        default = disabled
        exportsMigration = enabled
    }
}

urls {
    login = "http://localhost:9949/auth-login-stub/gg-sign-in"
}

draft.timeToLive = "30d"

scheduler {
    purge-draft-declarations {
        run-time = "23:30"
        interval = "1d"
    }
}

play.http.parser.maxMemoryBuffer=10M

contexts {
    routines-dispatcher {
        fork-join-executor {
            parallelism-min = 2
            parallalism-factor = 2.0
            parallelism-max = 20
        }
    }
}
